{"ast":null,"code":"// import Fetch from 'isomorphic-unfetch';\n// import Layout from '../components/Layout';\n// import Dock from '../components/Dock';\n// import React, { useEffect, useState } from 'react';\n// import TreeButton from '../shared/tree-button/tree-button';\n// import MedicalInfoButton from '../shared/medical-info-button/medical-info-button';\n// import DoctorsButton from '../shared/doctors-button/doctors-button';\n// import LawyersButton from '../shared/lawyers-button/lawyers-button';\n// import LegalInfoButton from '../shared/legal-info-button/legal-info-button'\n// import ReviewsButton from '../shared/reviews-button/reviews-button';\n// import NewsButton from '../shared/news-button/news-button';\n// import InvestmentsButton from '../shared/investments-button/investments-button';\n// import DashboardButton from '../shared/dashboard-button/dashboard-button';\n// import ProductsButtons from '../shared/products-buttons/products-buttons';\n// import MessagingButtons from '../shared/messaging-buttons/messaging-buttons';\n// import ConsumerFinancialsButtons from '../shared/consumer-financials-buttons/consumer-financials-buttons';\n// import RemainingButtons from '../shared/remaining-buttons/remaining-buttons';\n// import { useSpring, animated, config } from 'react-spring';\n// // So you want it to conditionally render the consumer or business component contingent on whether business is true\n// // Same with the dock\n// // So...first, lets fix the bugs with the balloon wrench, such that we can see it and it highlights upoon \n// let consumer = \"/Consumer.png\"\n// let business = \"/Business.png\"\n// export default function Consumer() {\n//     let localState = {\n//         soundBoolean: false,\n//         balloonBoolean: false,\n//         panelOpen: false,\n//         businessBoolean: false,\n//         menuBoolean: false\n//     }\n//     let [state, setState] = useState(localState);\n//     const twirlFunction = () => {\n//         setState({businessBoolean: !state.businessBoolean})\n//     }\n//     const soundFunction = () => {\n//         setState({soundBoolean: !state.soundBoolean})\n//     }\n//     const menuFunction = () => {\n//         setState({menuBoolean: !state.menuBoolean})\n//         if (state.menuBoolean) { \n//             let child = document.querySelector(\".image\")\n//             child.style.display = \"none\";\n//         }\n//     }\n//     const fade = useSpring({\n//         config: { duration: 4250, mass: 1, tension: 280, velocity: 200, friction: 120 },\n//         opacity: 1, from: {opacity: 0},\n//         display: 'block'\n//         })\n//         const [props2, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 1, tension: 35, friction: 4 } }))\n//         const calc = (x, y) => [-(y - window.innerHeight / 2) / 330, (x - window.innerWidth / 2) / 240, 1.002]\n//         const trans = (x, y, s) => `perspective(1990px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n//         // 120 / 320 is a good setting\n//         return (\n//     <div className=\"consumer-parent\">\n//     <div className=\"consumer-child\">\n//     <div className=\"consumer-image-and-background-container\">\n//     <div className=\"consumer-image-grandfather\">\n//     <animated.div style={fade} className=\"consumer-image-container\">\n//     <animated.img onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n//     onMouseLeave={() => set({ xys: [0, 0, 1] })} style={{ transform: props2.xys.interpolate(trans) }} className=\"consumer-image\" src={ consumer } alt=\"text\"/>\n//     </animated.div>\n//     </div>\n//     <div className=\"consumer-image-background\"></div>\n//     </div>\n//     <div>\n//     <div className=\"consumer-button-container\">\n//     <div className=\"tree-button-container\">\n//     <TreeButton></TreeButton>\n//     </div>\n//     <MedicalInfoButton></MedicalInfoButton>\n//     <DoctorsButton></DoctorsButton>\n//     <LawyersButton></LawyersButton>\n//     <LegalInfoButton></LegalInfoButton>\n//     <ReviewsButton></ReviewsButton>\n//     <div className=\"news-button-container\">\n//     <NewsButton></NewsButton>\n//     </div>\n//     <InvestmentsButton></InvestmentsButton>\n//     <DashboardButton></DashboardButton>\n//     <ProductsButtons></ProductsButtons>\n//     <MessagingButtons></MessagingButtons>\n//     <ConsumerFinancialsButtons></ConsumerFinancialsButtons>\n//     <div className=\"remaining-buttons-container\">\n//     <RemainingButtons></RemainingButtons>\n//     </div>\n//     </div>\n//     </div>\n//     </div>\n//     <style jsx>{` \n//     .consumer-parent {\n//         height:2048px;\n//         width: 1536px;\n//         padding-top: 14px;\n//     }\n//     .consumer-child {\n//         display: flex;\n//     }\n//     .consumer-button-container {\n//         position:relative;\n//         top: 2738px;\n//         right: 769px;\n//     }\n//     .tree-button-container {}\n//     .news-button-container {\n//     }\n//     .news-button-container:hover {\n//     }\n//     .consumer-image-grandfather {\n//         position: relative;\n//         left: 773px;\n//         top: 641px;\n//         z-index:2;\n//     }\n//     .consumer-image-container {\n//         position: relative;\n//         left: 1265px;\n//         top: 634px;\n//         z-index: 1;\n//     }\n//     .consumer-image {\n//         position: relative;\n//         z-index: 4;\n//     }\n//     .consumer-image-background {\n//         width: 1536px;\n//         height: 2005px;\n//         background: linear-gradient(270deg, #000000, #02091b);\n//         background-size: 400% 400%;\n//         animation: AnimationName 10s ease-in-out infinite;\n//         z-index:0;\n//         display: flex;\n//         bottom: 1270px;\n//         left: 769px;\n//         position: relative;\n//     @keyframes AnimationName {\n//         0%{background-position:0% 50%}\n//         50%{background-position:100% 50%}\n//         100%{background-position:0% 50%}\n//         }\n//     }\n//   `}</style>\n//       </div>\n//         )\n//     }","map":{"version":3,"sources":["/Users/websites/Documents/SunRunner/src/components/Consumer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA","sourcesContent":["// import Fetch from 'isomorphic-unfetch';\n// import Layout from '../components/Layout';\n// import Dock from '../components/Dock';\n// import React, { useEffect, useState } from 'react';\n// import TreeButton from '../shared/tree-button/tree-button';\n// import MedicalInfoButton from '../shared/medical-info-button/medical-info-button';\n// import DoctorsButton from '../shared/doctors-button/doctors-button';\n// import LawyersButton from '../shared/lawyers-button/lawyers-button';\n// import LegalInfoButton from '../shared/legal-info-button/legal-info-button'\n// import ReviewsButton from '../shared/reviews-button/reviews-button';\n// import NewsButton from '../shared/news-button/news-button';\n// import InvestmentsButton from '../shared/investments-button/investments-button';\n// import DashboardButton from '../shared/dashboard-button/dashboard-button';\n// import ProductsButtons from '../shared/products-buttons/products-buttons';\n// import MessagingButtons from '../shared/messaging-buttons/messaging-buttons';\n// import ConsumerFinancialsButtons from '../shared/consumer-financials-buttons/consumer-financials-buttons';\n// import RemainingButtons from '../shared/remaining-buttons/remaining-buttons';\n// import { useSpring, animated, config } from 'react-spring';\n\n// // So you want it to conditionally render the consumer or business component contingent on whether business is true\n// // Same with the dock\n\n// // So...first, lets fix the bugs with the balloon wrench, such that we can see it and it highlights upoon \n\n// let consumer = \"/Consumer.png\"\n// let business = \"/Business.png\"\n\n// export default function Consumer() {\n\n\n//     let localState = {\n//         soundBoolean: false,\n//         balloonBoolean: false,\n//         panelOpen: false,\n//         businessBoolean: false,\n//         menuBoolean: false\n//     }\n\n//     let [state, setState] = useState(localState);\n\n//     const twirlFunction = () => {\n//         setState({businessBoolean: !state.businessBoolean})\n//     }\n\n//     const soundFunction = () => {\n//         setState({soundBoolean: !state.soundBoolean})\n//     }\n\n//     const menuFunction = () => {\n//         setState({menuBoolean: !state.menuBoolean})\n//         if (state.menuBoolean) { \n\n//             let child = document.querySelector(\".image\")\n//             child.style.display = \"none\";\n//         }\n//     }\n\n//     const fade = useSpring({\n//         config: { duration: 4250, mass: 1, tension: 280, velocity: 200, friction: 120 },\n//         opacity: 1, from: {opacity: 0},\n//         display: 'block'\n//         })\n\n\n        \n        \n//         const [props2, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 1, tension: 35, friction: 4 } }))\n//         const calc = (x, y) => [-(y - window.innerHeight / 2) / 330, (x - window.innerWidth / 2) / 240, 1.002]\n//         const trans = (x, y, s) => `perspective(1990px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\n//         // 120 / 320 is a good setting\n        \n        \n//         return (\n//     <div className=\"consumer-parent\">\n//     <div className=\"consumer-child\">\n//     <div className=\"consumer-image-and-background-container\">\n//     <div className=\"consumer-image-grandfather\">\n//     <animated.div style={fade} className=\"consumer-image-container\">\n//     <animated.img onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n//     onMouseLeave={() => set({ xys: [0, 0, 1] })} style={{ transform: props2.xys.interpolate(trans) }} className=\"consumer-image\" src={ consumer } alt=\"text\"/>\n//     </animated.div>\n//     </div>\n//     <div className=\"consumer-image-background\"></div>\n//     </div>\n\n//     <div>\n//     <div className=\"consumer-button-container\">\n//     <div className=\"tree-button-container\">\n//     <TreeButton></TreeButton>\n//     </div>\n//     <MedicalInfoButton></MedicalInfoButton>\n//     <DoctorsButton></DoctorsButton>\n//     <LawyersButton></LawyersButton>\n//     <LegalInfoButton></LegalInfoButton>\n//     <ReviewsButton></ReviewsButton>\n//     <div className=\"news-button-container\">\n//     <NewsButton></NewsButton>\n//     </div>\n//     <InvestmentsButton></InvestmentsButton>\n//     <DashboardButton></DashboardButton>\n//     <ProductsButtons></ProductsButtons>\n//     <MessagingButtons></MessagingButtons>\n//     <ConsumerFinancialsButtons></ConsumerFinancialsButtons>\n//     <div className=\"remaining-buttons-container\">\n//     <RemainingButtons></RemainingButtons>\n//     </div>\n    \n    \n\n//     </div>\n//     </div>\n//     </div>\n//     <style jsx>{` \n//     .consumer-parent {\n//         height:2048px;\n//         width: 1536px;\n//         padding-top: 14px;\n//     }\n    \n//     .consumer-child {\n//         display: flex;\n//     }\n\n\n\n//     .consumer-button-container {\n//         position:relative;\n//         top: 2738px;\n//         right: 769px;\n    \n//     }\n\n//     .tree-button-container {}\n\n//     .news-button-container {\n//     }\n\n//     .news-button-container:hover {\n//     }\n\n//     .consumer-image-grandfather {\n//         position: relative;\n//         left: 773px;\n//         top: 641px;\n//         z-index:2;\n//     }\n\n//     .consumer-image-container {\n//         position: relative;\n//         left: 1265px;\n//         top: 634px;\n//         z-index: 1;\n//     }\n\n\n//     .consumer-image {\n//         position: relative;\n//         z-index: 4;\n\n//     }\n\n//     .consumer-image-background {\n//         width: 1536px;\n//         height: 2005px;\n//         background: linear-gradient(270deg, #000000, #02091b);\n//         background-size: 400% 400%;\n//         animation: AnimationName 10s ease-in-out infinite;\n//         z-index:0;\n//         display: flex;\n//         bottom: 1270px;\n//         left: 769px;\n//         position: relative;\n\n\n//     @keyframes AnimationName {\n//         0%{background-position:0% 50%}\n//         50%{background-position:100% 50%}\n//         100%{background-position:0% 50%}\n//         }\n//     }\n\n\n//   `}</style>\n//       </div>\n//         )\n//     }\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"script"}